#!/usr/bin/env python

import argparse
import sys
import time
from sqlalchemy import create_engine
from sqlalchemy.orm import Session

import config as cfg
from model import Market
from lobrunner import OrderBookRunner

DAEMON_WAIT_SECS = .2


class Main():
    def __init__(self):
        self.engine = create_engine(cfg.DB_CONN)
        db = self.session = Session(self.engine)

        markets = [m.code for m in db.query(Market.code).all()]

        parser = argparse.ArgumentParser(description='Next Exchange')
        parser.add_argument('market', choices=markets)
        parser.add_argument('-v', '--verbose', action='store_true')
        parser.add_argument('-d', '--daemon', type=float, nargs='?',
            const=DAEMON_WAIT_SECS, help='Run in loop', metavar='secs')

        args = parser.parse_args()

        self.run_market(args)

    def run_market(self, args):
        runner = OrderBookRunner(self.session, args.market)
        while True:
            runner.run()
            if not args.daemon:
                break
            print('Wait %.2f seconds.' % args.daemon)
            time.sleep(args.daemon)


if __name__ == '__main__':
    Main()

